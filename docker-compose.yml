version: "3.8"

services:
  py_postgres_db:
    container_name: py_postgres_db
    build: ./py_postgres
    image: py__postgres_db
    restart: always
    volumes:
      - py_postgres_db_volume:/var/lib/py_postgresql/data/
    env_file:
      - .env
    # ports:
    #   - ${PY_POSTGRES_PORT}:5432

  go_postgres_db:
    container_name: go_postgres_db
    build: ./go_postgres
    image: go__postgres_db
    restart: always
    volumes:
      - go_postgres_db_volume:/var/lib/go_postgresql/data/
    env_file:
      - .env
    # ports:
    #   - ${GO_POSTGRES_PORT}:5432

  py_app:
    container_name: py_app
    build:
      context: .
      dockerfile: ./src/py_app/Dockerfile
    image: py__app
    restart: always
    depends_on:
      - py_postgres_db
    env_file:
      - .env
    environment:
      WAIT_HOSTS: py_postgres_db:5432
    command: bash -c "uvicorn app:app --host 0.0.0.0 --port ${PY_PORT:-8000}" 
    ports:
      - ${PY_PORT:-8000}:${PY_PORT:-8000}

  go_app:
    container_name: go_app
    build:
      context: .
      dockerfile: ./src/go_app/Dockerfile
    image: go__app
    restart: always
    depends_on:
      - go_postgres_db
    env_file:
      - .env
    environment:
      WAIT_HOSTS: go_postgres_db:5432
    command: sh -c "go run app.go"
    ports:
      - ${GO_PORT:-8080}:${GO_PORT:-8080}


volumes:
  py_postgres_db_volume:
  go_postgres_db_volume:
